[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''
hook_add = '''
let g:dein#types#git#clone_depth = 1

nnoremap <silent> ;u :<C-u>call dein#update()<CR>
nnoremap <silent> ;i :<C-u>call dein#install()<CR>
nnoremap <silent> ;o :<C-u>call dein#recache_runtimepath()<CR>
'''

[[plugins]]
repo = 'zhimsel/vim-stay'
on_path = '.*'
hook_source = 'let g:stay_verbosity = -1'
hook_post_source = "let g:volatile_ftypes += ['denite', 'defx', 'gita', 'fila']"

[[plugins]]
repo = 'haya14busa/vim-keeppad'
on_cmd = ['KeeppadOn', 'KeeppadOff']
hook_add = '''
Autocmd BufReadPre
  \ *.{js,json,xml,toml,html,css,scss,sss,md,snippets}
  \ KeeppadOn
'''
hook_source = 'let g:keeppad_autopadding = 0'

[[plugins]]
repo = 'triglav/vim-visual-increment'
on_map = {x = '<Plug>Visual'}
hook_add = '''
xmap <C-a> <Plug>VisualIncrement
xmap <C-x> <Plug>VisualDecrement
'''
hook_source = 'set nrformats+=alpha'

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_cmd = 'SplitjoinSplit'
hook_add = 'nmap <silent> S :<C-u>silent SplitjoinSplit<CR>'
hood_source = '''
let g:splitjoin_join_mapping = ''
let g:splitjoin_split_mapping = ''
'''

[[plugins]]
repo = 'simeji/winresizer'
on_cmd = ['WinResizerStartResize', 'WinResizerStartMove', 'WinResizerStartFocus']
hook_add = '''
nnoremap <silent> <Space>o :<C-u>WinResizerStartResize<CR>
nnoremap <silent> <Space>O :<C-u>WinResizerStartMove<CR>
nnoremap <silent> <Space>f :<C-u>WinResizerStartFocus<CR>
'''
hook_source = '''
let g:winresizer_vert_resize = 4
let g:winresizer_horiz_resize = 1
let g:winresizer_keycode_finish = char2nr('o')
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
merged = 0
on_ft = 'markdown'
hook_post_update = '''
if executable('node')
  call system(printf('cd %s && yarn install --silent --no-lockfile',
    \ expand(dein#get('markdown-preview.nvim').rtp . '/app')))
endif
'''
hook_source = '''
let g:mkdp_port = 3010
let g:mkdp_auto_start = 0
let g:mkdp_auto_close = 0
let g:mkdp_open_to_the_world = 0
'''

[plugins.ftplugin]
markdown = '''
nnoremap <silent> <buffer> ,p :<C-u>call mkdp#util#open_preview_page()<CR>
nnoremap <silent> <buffer> ,q :<C-u>call mkdp#util#stop_preview()<CR>
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_source = '''
let g:context_filetype#search_offset = 500

function! s:addContext(filetype, context) abort
  let filetype = get(context_filetype#default_filetypes(), a:filetype, [])
  let g:context_filetype#filetypes[a:filetype] = add(filetype, a:context)
endfunction

let css = {
  \ 'filetype': 'css',
  \ 'start': '<\(style\)\%( [^>]*\)\?>', 'end': '</\1>'
  \ }

let javascript = {
  \ 'filetype': 'javascript',
  \ 'start': '<\(script\)\%( [^>]*\)\?>', 'end': '</\1>'
  \ }

for filetype in split('html twig blade')
  call s:addContext(filetype, css)
  call s:addContext(filetype, javascript)
endfor | unlet filetype
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_done_update = '''
if executable('pip3')
  call system('pip3 install -q --user --upgrade pynvim')
endif
'''
hook_add = '''
function! Decomplete() abort
  if pumvisible()
    return "\<C-n>"
  endif

  " let [curPos, lineLength] = [getcurpos()[4], col('$')]
  " let isText = curPos <= lineLength
  " let isStartLine = curPos <= 1
  " let isBackspace = getline('.')[curPos-2] =~ '\s'

  " if isText && !isStartLine && !isBackspace
  "   return deoplete#mappings#manual_complete()
  " endif

  let curPos = getcurpos()[4]
  if curPos && strpart(getline('.'), curPos - 2, 3) =~ '^\w'
    return deoplete#auto_complete()
  endif

  return "\<Tab>"
endfunction

inoremap <silent> <Plug>(decomplete) <C-r>=Decomplete()<CR>

imap <Tab> <Plug>(decomplete)
imap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<Plug>(decomplete)"
imap <expr> <C-j>   pumvisible() ? "\<C-n>" : "\<C-g>u<C-u>"
imap <expr> <C-k>   pumvisible() ? "\<C-p>" : col('.') ==# col('$') ? "\<C-k>" : "\<C-o>D"

" Make <BS> delete letter instead of clearing completion
inoremap <BS> <BS>
'''
hook_source = '''
call deoplete#enable()

call deoplete#custom#option({
  \ 'num_processes': 2,
  \ 'auto_complete_delay': 2,
  \ 'auto_refresh_delay': 20,
  \ 'camel_case': v:true,
  \ 'max_list': 42,
  \ 'prev_completion_mode': 'length',
  \ 'refresh_always': v:true,
  \ 'skip_chars': ['(', ')'],
  \ 'check_stderr': v:false,
  \ 'skip_multibyte': v:true,
  \ 'yarp': !has('nvim'),
  \ 'ignore_sources': {
  \   '_': ['around', 'buffer'],
  \ },
  \ })

call deoplete#custom#source('ultisnips', 'matchers', ['matcher_full_fuzzy'])
call deoplete#custom#source('denite', 'matchers',  ['matcher_full_fuzzy', 'matcher_length'])
'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = '''
let g:echodoc#type = 'virtual'
call echodoc#enable()
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'

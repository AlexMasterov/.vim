[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
nnoremap <silent> ;B :<C-u>Denite buffer<CR>
nnoremap <silent> ;b :<C-u>Denite buffer -winheight=18<CR>
nnoremap <silent> `  :<C-u>Denite buffer -winheight=18<CR>
nnoremap <silent> ;f :<C-u>Denite file/rec<CR>

nnoremap <silent> ;g :<C-u>Denite grep -buffer-name=search -no-empty<CR>
nnoremap <silent> ;R :<C-u>Denite register -buffer-name=register -winheight=8<CR>

nnoremap <silent> <expr> / line('$') > 10000
  \ ? '/'
  \ :  ":\<C-u>Denite line -buffer-name=search -no-statusline -start-filter\<CR>"
nnoremap <silent> <expr> * line('$') > 10000
  \ ? '*'
  \ : ":\<C-u>DeniteCursorWord line -buffer-name=search -no-statusline\<CR>"
'''
hook_source = '''
call denite#custom#option('default', {
  \ 'empty': v:true,
  \ 'highlight_filter_background': 'CursorLine',
  \ 'highlight_matched_range': 'User5',
  \ 'highlight_mode_normal': 'Visual',
  \ 'source_names': 'short',
  \ 'split': 'floating',
  \ 'statusline': v:false,
  \ })

call denite#custom#var('buffer', 'date_format', '')

" Sources
call denite#custom#source('buffer', 'sorters', ['sorter/reverse'])
call denite#custom#source('file_mru,buffer', 'converters', ['converter/relative_abbr'])

" Ripgrep: https://github.com/BurntSushi/ripgrep
if executable('rg')
  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'default_opts', ['--no-messages', '--no-heading', '--maxdepth', '8', '--vimgrep'])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('file_rec', 'command',  ['rg',
    \ '--no-messages', '--no-line-number',
    \ '--maxdepth', '8', '--fixed-strings', '--files-with-matches', '--hidden', '--follow', '.'])
endif
'''

[ftplugin]
denite = '''
nnoremap <silent> <buffer> <expr> q       denite#do_map('quit')
nnoremap <silent> <buffer> <expr> <Esc>   denite#do_map('quit')
nnoremap <silent> <buffer> <expr> <C-c>   denite#do_map('quit')
nnoremap <silent> <buffer> <expr> i       denite#do_map('open_filter_buffer')
nnoremap <silent> <buffer> <expr> r       denite#do_map('redraw')
nnoremap <silent> <buffer> <expr> <Tab>   denite#do_map('restore_sources')
nnoremap <silent> <buffer> <expr> @       denite#do_map('toggle_select')
nnoremap <silent> <buffer> <expr> <Space> denite#do_map('toggle_select') . 'j'

nnoremap <silent> <buffer> <expr> o       denite#do_map('do_action')
nnoremap <silent> <buffer> <expr> <CR>    denite#do_map('do_action')
nnoremap <silent> <buffer> <expr> d       denite#do_map('do_action', 'delete')
nnoremap <silent> <buffer> <expr> p       denite#do_map('do_action', 'preview')
nnoremap <silent> <buffer> <expr> S       denite#do_map('do_action', 'splitswitch')
nnoremap <silent> <buffer> <expr> V       denite#do_map('do_action', 'vsplitswitch')

hi! default link deniteStatusLinePath   StatusLine
hi! default link deniteStatusLineNumber StatusLine
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
hook_add = '''
let g:neomru#do_validate = 0
let g:neomru#filename_format = ':.'
let g:neomru#time_format = '%m.%d â€” %H:%M'
let g:neomru#file_mru_limit = 150
let g:neomru#file_mru_path = $VIMHOME . '/neomru/file'
let g:neomru#file_mru_ignore_pattern = '\.\%(vimrc\|log\)$'
let g:neomru#directory_mru_limit = 0
let g:neomru#directory_mru_path = $VIMHOME . '/neomru/directory'

nnoremap <silent> ;w :<C-u>Denite file_mru -matchers='matcher/project_files'<CR>
nnoremap <silent> ;W :<C-u>Denite file_mru<CR>
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = 'denite.nvim'
on_event = 'TextYankPost'
hook_add = '''
nnoremap <silent> ;y :<C-u>Denite neoyank -no-statusline<CR>
nnoremap <silent> ;r :<C-u>Denite neoyank -buffer-name=register<CR>
xnoremap <silent> ;r :<C-u>Denite neoyank register
  \ -buffer-name=register -winheight=8 -default-action=replace<CR>
'''
hook_source = '''
let g:neoyank#limit = 64
let g:neoyank#file = $VIMHOME . '/yank_file'
'''

snippet header "header"
" File: ${1:`!v expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Modified: `!v strftime("%B %d, %Y")`}
endsnippet

snippet guard "guard"
if exists('${1:did_`!v Filename()`}') || &cp${2: || version < 700}
    finish
endif
let $1 = 1${3}
endsnippet

snippet f "f"
function! ${1:function_name}(${2})
    ${3:" code}
endfunction
endsnippet

snippet fd "f dict"
func! ${1:function_name}(${2}) dict
    ${3:" code}
endfunction
endsnippet

snippet r "return"
return ${1:result}
endsnippet

snippet wh "wh"
while ${1:condition}
    ${2:" code}
endw
endsnippet

snippet for "for"
for ${1:needle} in ${2:haystack}
    ${3:" code}
endfor
endsnippet

snippet if "if"
if ${1:condition}
    ${2:" code}
endif
endsnippet

snippet t "t"
try
    ${1}
catch ${2}
    ${3}
endtry
endsnippet

snippet e "echo"
echo '${1:echo}'
endsnippet

snippet p "printf"
printf('${2}', ${1})
endsnippet

snippet l "let"
let ${1:var} = ${2:val}
endsnippet

snippet ll "let list"
let [${1:var}, ${2:var}] = ${3:val}
endsnippet

snippet s "self"
self${1:.}${2}
endsnippet

snippet c "call"
call ${1:function}
endsnippet

snippet ca "call()"
call('${1:functionName}', [${2:arg}])
endsnippet

snippet ife "if empty(variable)"
if empty('${1:variable}')
    ${2:...}
endif
endsnippet

snippet ifv "if exists(variable)"
if exists('${1:variable}')
    ${2:...}
endif
endsnippet

snippet ifm "if !hasmapto" b
if !hasmapto('<Plug>${1:...}')
    nmap <unique> ${4:mapping} <Plug>$1
endif
nnoremap <unique> <script> <Plug>$1 <SID>${2:...}
nnoremap <silent> <SID>$2 :call <SID>${3:functionName}<CR>
endsnippet

snippet ifc "if exists(command)" b
if exists(':${1:command}')
    command! ${2:...} $1 ${3:...}
endif
endsnippet

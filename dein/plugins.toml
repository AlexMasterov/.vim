[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''
hook_add = '''
  let g:dein#types#git#clone_depth = 1
  let g:dein#install_max_processes = 30

  nnoremap <silent> ;u :<C-u>call dein#update()<CR>
  nnoremap <silent> ;i :<C-u>call dein#install()<CR>
'''

[[plugins]]
repo = 'AlexMasterov/vim-stay'
rev = 'fix/1.4.0'
on_path = '.*'
hook_source = 'let g:stay_verbosity = -1'
hook_post_source = "let g:volatile_ftypes += ['denite', 'unite', 'gita', 'vimfiler']"

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hood_source = '''
  let g:loaded_lexima = 1
  let g:lexima_enable_basic_rules = 0
  let g:lexima_enable_endwise_rules = 0

  call lexima#init()
  Autocmd InsertEnter * call lexima#insmode#clear_stack()
'''
hook_post_source = 'source ~/vimfiles/dein/plugins/lexima.vim'

[[plugins]]
repo = 'simeji/winresizer'
on_cmd = ['WinResizerStartResize', 'WinResizerStartMove']
hook_add = '''
  nnoremap <silent> <Space><Enter> :<C-u>WinResizerStartResize<CR>
  nnoremap <silent> <Space><BS>    :<C-u>WinResizerStartMove<CR>
'''
hook_source = '''
  let g:winresizer_vert_resize = 4
  let g:winresizer_horiz_resize = 1
  let g:winresizer_keycode_finish = char2nr('o')
'''

[[plugins]]
repo = 'jakobwesthoff/argumentrewrap'
hook_add = 'map <silent> K :<C-u>call argumentrewrap#RewrapArguments()<CR>'

[[plugins]]
repo = 'haya14busa/vim-keeppad'
on_cmd = ['KeeppadOn', 'KeeppadOff']
hook_add = 'Autocmd BufReadPre *.{json,css,scss,sss,sugarss},qfreplace* KeeppadOn'
hook_source = 'let g:keeppad_autopadding = 0'

[[plugins]]
repo = 'kana/vim-smartword'
on_map = {nx = '<Plug>(smartword-'}
hook_add = '''
  for char in split('w e b ge')
    execute printf('nmap %s <Plug>(smartword-%s)', char, char)
    execute printf('vmap %s <Plug>(smartword-%s)', char, char)
  endfor | unlet char
'''

[[plugins]]
repo = 'triglav/vim-visual-increment'
on_map = {x = '<Plug>Visual'}
hook_add = '''
  xmap <C-a> <Plug>VisualIncrement
  xmap <C-x> <Plug>VisualDecrement
'''
hook_source = 'set nrformats+=alpha'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
  let g:parenmatch = 0

  AutocmdFT php,javascript,json,css
    \ Autocmd BufRead,BufEnter <buffer> let b:parenmatch = 1

  Autocmd ColorScheme *
    \ hi ParenMatch guifg=#2B2B2B guibg=#EEEEEE gui=NONE
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = {x = '<Plug>(EasyAlign)'}
hook_add = 'vmap <Enter> <Plug>(EasyAlign)'
hook_source = 'source ~/vimfiles/dein/plugins/easyalign.vim'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = 'source ~/vimfiles/dein/plugins/switch.vim'

[[plugins]]
repo = 'AndrewRadev/sideways.vim'
hook_add = 'source ~/vimfiles/dein/plugins/sideways.vim'

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_cmd = 'SplitjoinSplit'
hook_add = 'nmap <silent> S :<C-u>silent SplitjoinSplit<CR>'
hood_source = '''
  let g:splitjoin_join_mapping = ''
  let g:splitjoin_split_mapping = ''
'''

[[plugins]]
repo = 'kana/vim-smartchr'
hook_add = 'source ~/vimfiles/dein/plugins/smartchr.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
on_source = ['vimfiler.vim', 'unite.vim']

[[plugins]]
repo = 'RRethy/vim-illuminate'
hook_add = '''
  let g:Illuminate_delay = 230
  let g:Illuminate_ftblacklist = [
    \ 'vimfiler', 'denite', 'unite', 'toml', 'vim', 'json', 'snippets']
  let g:Illuminate_ftHighlightGroups = {
    \ 'javascript': [
    \   'jsClassBlock', 'jsFuncBlock', 'jsRepeatBlock',
    \   'jsIfElseBlock', 'jsParenIfElse', 'jsParen', 'jsReturn',
    \   'jsVariableDef', 'jsFuncArgs', 'jsException', 'jsObjectProp',
    \   'jsDestructuringBlock', 'jsBracket']
    \ }
'''

[[plugins]]
repo = 'chr4/nginx.vim'

[[plugins]]
repo = 'tokutake/twig-indent'

[[plugins]]
repo = 'jwalton512/vim-blade'

[[plugins]]
repo = 'cespare/vim-toml'
